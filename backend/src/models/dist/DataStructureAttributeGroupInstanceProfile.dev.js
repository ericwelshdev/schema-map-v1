"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var _require = require('sequelize'),
    DataTypes = _require.DataTypes,
    Model = _require.Model;

var _require2 = require('../../config/db'),
    sequelize = _require2.sequelize;

var DataStructureAttributeGroupInstanceProfile =
/*#__PURE__*/
function (_Model) {
  _inherits(DataStructureAttributeGroupInstanceProfile, _Model);

  function DataStructureAttributeGroupInstanceProfile() {
    _classCallCheck(this, DataStructureAttributeGroupInstanceProfile);

    return _possibleConstructorReturn(this, _getPrototypeOf(DataStructureAttributeGroupInstanceProfile).apply(this, arguments));
  }

  return DataStructureAttributeGroupInstanceProfile;
}(Model);

DataStructureAttributeGroupInstanceProfile.init({
  ds_attr_grp_instc_prof_id: {
    type: DataTypes.INTEGER,
    primaryKey: true,
    //  autoIncrement: true, // Equivalent to GENERATED BY DEFAULT AS IDENTITY
    allowNull: false
  },
  ds_id: {
    type: DataTypes.INTEGER,
    primaryKey: true,
    allowNull: false
  },
  dsstrc_attr_grp_id: {
    type: DataTypes.INTEGER,
    allowNull: true
  },
  stdiz_abrvd_attr_grp_nm: {
    type: DataTypes.STRING,
    primaryKey: true,
    allowNull: false
  },
  ds_instc_data_cntnt_typ_cd: {
    type: DataTypes.STRING,
    allowNull: true
  },
  ds_instc_data_cntnt_nm: {
    type: DataTypes.STRING,
    allowNull: true
  },
  ds_instc_data_cntnt_min_dt: {
    type: DataTypes.DATE,
    allowNull: true
  },
  ds_instc_data_cntnt_max_dt: {
    type: DataTypes.DATE,
    allowNull: true
  },
  par_ds_instc_id: {
    type: DataTypes.BIGINT,
    allowNull: true
  },
  ds_instc_physcl_nm: {
    type: DataTypes.STRING,
    allowNull: true
  },
  ds_instc_loc_txt: {
    type: DataTypes.STRING,
    allowNull: true
  },
  ds_instc_arrival_dt: {
    type: DataTypes.DATE,
    allowNull: true
  },
  ds_instc_publd_dt: {
    type: DataTypes.DATE,
    allowNull: true
  },
  ds_instc_row_cnt: {
    type: DataTypes.DECIMAL,
    allowNull: true
  },
  ds_instc_size_nbr: {
    type: DataTypes.DECIMAL,
    allowNull: true
  },
  ds_instc_comprsn_ind: {
    type: DataTypes.BOOLEAN,
    allowNull: true
  },
  ds_instc_file_cnt: {
    type: DataTypes.DECIMAL,
    allowNull: true
  },
  ds_instc_chksum_id: {
    type: DataTypes.STRING,
    allowNull: true
  },
  ds_instc_part_ind: {
    type: DataTypes.BOOLEAN,
    allowNull: true
  },
  ds_instc_late_arrival_ind: {
    type: DataTypes.BOOLEAN,
    allowNull: true
  },
  ds_instc_resupply_ind: {
    type: DataTypes.BOOLEAN,
    allowNull: true
  }
}, {
  sequelize: sequelize,
  tableName: 'dsstrc_attr_grp_instc_prof',
  freezeTableName: true,
  timestamps: false,
  underscored: true
});
module.exports = DataStructureAttributeGroupInstanceProfile;