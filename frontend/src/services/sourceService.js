import axios from 'axios';

const API_URL = 'http://localhost:5000/api';

export const getSources = async () => {
  const response = await axios.get(`${API_URL}/sources`);
  return response.data;
};

export const postSource = async (sourceData) => {
  const formattedData = {
    ds_id: null, // Will be generated by DB
    stdiz_abrvd_attr_grp_nm: sourceData.stdizName,
    dsstrc_attr_grp_nm: sourceData.displayName,
    dsstrc_attr_grp_shrt_nm: sourceData.shortName || sourceData.name,
    dsstrc_attr_grp_desc: sourceData.description,
    dsstrc_attr_grp_src_typ_cd: 'Source',
    pii_ind: sourceData.hasPII || false,
    phi_ind: sourceData.hasPHI || false,
    ai_tag_cmplx: JSON.stringify(sourceData.aiTags || []),
    user_tag_cmplx: JSON.stringify(sourceData.userTags || []),
    usr_cmt_txt: sourceData.comments,
    oprtnl_stat_cd: 'Active',
    cre_by_nm: 'System',
    cre_ts: new Date().toISOString(),
    updt_by_nm: 'System',
    updt_ts: new Date().toISOString()
  };

  const response = await axios.post(`${API_URL}/sources`, formattedData);
  return response.data;
};

export const putSource = async (id, sourceData) => {
  const response = await axios.put(`${API_URL}/sources/${id}`, sourceData);
  return response.data;
};

export const deleteSource = async (id) => {
  await axios.delete(`${API_URL}/sources/${id}`);
};
